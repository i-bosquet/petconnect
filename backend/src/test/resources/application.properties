# src/test/resources/application.properties

# --- Database Connection for Tests (Connect to Docker Postgres) ---
spring.datasource.url=jdbc:postgresql://localhost:5432/petconnect_db
spring.datasource.username=root
spring.datasource.password=1234
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.open-in-view=false

# --- JPA & SQL Init Properties for Tests ---
spring.jpa.hibernate.ddl-auto=create
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true

# --- JWT Configuration for Tests ---
jwt.secret.key=TestSecretKey_a7ygFp1u4DmX9qRcBvE2wZ8xNlK6jH3sIoP0uV5rTfYgHl2jK8dN7cX4zQ1wE9oL_KeepItLongAndRandom!
jwt.secret.generator=PetConnectTestIssuer

# --- Other Properties for Tests ---
app.external.images.path=./target/test-images
server.error.include-message=always

# --- Digital Signature Simulation (Using TEST keys) ---
app.security.vet.privatekey.path=../keys/vet_private_key.pem
app.security.vet.privatekey.password=1234
app.security.clinic.privatekey.path=../keys/clinic_private_key.pem
app.security.clinic.privatekey.password=1234

logging.level.com.petconnect.backend.user.application.service.impl=DEBUG
logging.level.com.petconnect.backend.pet.application.mapper=DEBUG

# --- Kafka Configuration for Integration Tests ---
spring.kafka.bootstrap-servers=localhost:9093

spring.kafka.consumer.group-id=petconnect-test-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.petconnect.backend.pet.application.event,com.petconnect.backend.certificate.application.event

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Define test topic names
kafka.topic.pet-activation-requests=test-pet-activation-requests
kafka.topic.pet-activated=test-pet-activated
kafka.topic.certificate-requests=test-certificate-requests
kafka.topic.certificate-generated=test-certificate-generated

logging.level.org.apache.kafka=WARN
logging.level.org.springframework.kafka=WARN