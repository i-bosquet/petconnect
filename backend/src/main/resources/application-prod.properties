# Connection to AWS RDS PostgresSQL
spring.datasource.url=jdbc:postgresql://${RDS_HOSTNAME}:${RDS_PORT}/${RDS_DB_NAME}
spring.datasource.username=${RDS_USERNAME}
spring.datasource.password=${RDS_PASSWORD}

# Hibernate configuration for production (never create or update)
spring.jpa.hibernate.ddl-auto=validate
spring.sql.init.mode=never

# AWS S3 Configuration
# S3 Bucket Names (Environment Variables on EC2)
aws.s3.bucket.images=${S3_IMAGES_BUCKET_NAME}
aws.s3.bucket.keys=${S3_KEYS_BUCKET_NAME}
# Region where the S3 buckets and the app are located
aws.region=${AWS_APP_REGION}

# Base URL of the Backend in Production (Environment Variables on EC2)
app.backend.base-url=${APP_PROD_BACKEND_BASE_URL}
# Base URL of the Frontend
app.frontend.prod.url=https://petconnect.isabosdev.com

# Base path WITHIN the static resources (JAR) for default User avatars
app.default.user.image.path=images/avatars/users/

# Base path WITHIN the static resources (JAR) for default Pet avatars
app.default.pet.image.path=images/avatars/pets/

# Base URL for S3 images bucket (public access)
aws.s3.bucket.images.public-url=https://petconnect-user-uploads-prod-ibosquet.s3.eu-west-2.amazonaws.com

# AWS Kafka Configuration (Environment Variable for MSK)
spring.kafka.bootstrap-servers=${KAFKA_PROD_BROKERS}
# Properties for IAM authentication with MSK
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=AWS_MSK_IAM
spring.kafka.properties.sasl.jaas.config=software.amazon.msk.auth.iam.IAMLoginModule required;
spring.kafka.properties.sasl.client.callback.handler.class=software.amazon.msk.auth.iam.IAMClientCallbackHandler

# Serializers/Deserializers (likely same as dev)
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.petconnect.backend.pet.application.event,com.petconnect.backend.certificate.application.event,com.petconnect.backend.user.application.event
spring.kafka.consumer.auto-offset-reset=earliest

# Default group ID for consumers managed by Spring Boot (listeners).
spring.kafka.consumer.group-id=petconnect-group-prod

# Topic Names for Kafka (Production)
kafka.topic.pet-activation-requests=pet-activation-requests-prod
kafka.topic.pet-activated=pet-activated-prod
kafka.topic.certificate-requests=certificate-requests-prod
kafka.topic.certificate-generated=certificate-generated-prod
kafka.topic.clinic-keys-changed=clinic-keys-changed-prod

# Email credentials
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${PROD_GMAIL_USERNAME}
spring.mail.password=${PROD_GMAIL_APP_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


logging.level.com.petconnect=INFO
logging.level.org.springframework=WARN
logging.level.org.hibernate=WARN
logging.level.software.amazon.msk.auth.iam=DEBUG

# for security, so as not to expose internal details in error messages.
server.error.include-message=on_param


